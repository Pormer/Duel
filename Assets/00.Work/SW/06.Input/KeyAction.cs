//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/00.Work/SW/06.Input/KeyAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyAction"",
    ""maps"": [
        {
            ""name"": ""PlayerInputs"",
            ""id"": ""829c998b-dbb6-4b34-a656-6b6d29e886f0"",
            ""actions"": [
                {
                    ""name"": ""LeftMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eb238773-9cad-4bee-a22d-85064bb901aa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RIghtMovement"",
                    ""type"": ""Button"",
                    ""id"": ""9070637d-f6a8-4427-9bad-25cbf8f4c693"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftPlayerEvent"",
                    ""type"": ""Button"",
                    ""id"": ""3435f9bb-615e-48d1-b518-fc1108046cbb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RIghtPlayerEvent"",
                    ""type"": ""Button"",
                    ""id"": ""e0189627-7e86-4153-8ce7-cdbd468ebf94"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""320d05a2-cf7a-40f6-8e70-712d84802e57"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c5dadd9-d1a3-45ff-a344-befa11d2cdc8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e7ddcc1-5c6e-4244-8849-ffb76e73007c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b40cccb-ef1f-4e27-8e5e-60e568b88b88"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52fac95a-276d-4567-8e8b-9af92965aa91"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd40cb64-6e8d-41d1-acb2-e51ca7ada8d5"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""647f1e50-909e-4880-90a7-cfbc764cf6a7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42c35518-20c4-4183-a4da-53f99e489f1e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""246b90c6-f42f-4dca-a837-4b591e949e8f"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce01fadd-076c-4b65-95cc-d3af94163562"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0d33706-52e9-4a63-8d99-5f3352bdd290"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d54ccdc-88ef-44f8-a267-418c61d8a0d9"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f698e359-3fee-4bee-a88d-038bf322a420"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad591b04-7045-4430-92f3-d8c99a32e2f7"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIghtPlayerEvent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerInputs
        m_PlayerInputs = asset.FindActionMap("PlayerInputs", throwIfNotFound: true);
        m_PlayerInputs_LeftMovement = m_PlayerInputs.FindAction("LeftMovement", throwIfNotFound: true);
        m_PlayerInputs_RIghtMovement = m_PlayerInputs.FindAction("RIghtMovement", throwIfNotFound: true);
        m_PlayerInputs_LeftPlayerEvent = m_PlayerInputs.FindAction("LeftPlayerEvent", throwIfNotFound: true);
        m_PlayerInputs_RIghtPlayerEvent = m_PlayerInputs.FindAction("RIghtPlayerEvent", throwIfNotFound: true);
    }

    ~@KeyAction()
    {
        UnityEngine.Debug.Assert(!m_PlayerInputs.enabled, "This will cause a leak and performance issues, KeyAction.PlayerInputs.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInputs
    private readonly InputActionMap m_PlayerInputs;
    private List<IPlayerInputsActions> m_PlayerInputsActionsCallbackInterfaces = new List<IPlayerInputsActions>();
    private readonly InputAction m_PlayerInputs_LeftMovement;
    private readonly InputAction m_PlayerInputs_RIghtMovement;
    private readonly InputAction m_PlayerInputs_LeftPlayerEvent;
    private readonly InputAction m_PlayerInputs_RIghtPlayerEvent;
    public struct PlayerInputsActions
    {
        private @KeyAction m_Wrapper;
        public PlayerInputsActions(@KeyAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftMovement => m_Wrapper.m_PlayerInputs_LeftMovement;
        public InputAction @RIghtMovement => m_Wrapper.m_PlayerInputs_RIghtMovement;
        public InputAction @LeftPlayerEvent => m_Wrapper.m_PlayerInputs_LeftPlayerEvent;
        public InputAction @RIghtPlayerEvent => m_Wrapper.m_PlayerInputs_RIghtPlayerEvent;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Add(instance);
            @LeftMovement.started += instance.OnLeftMovement;
            @LeftMovement.performed += instance.OnLeftMovement;
            @LeftMovement.canceled += instance.OnLeftMovement;
            @RIghtMovement.started += instance.OnRIghtMovement;
            @RIghtMovement.performed += instance.OnRIghtMovement;
            @RIghtMovement.canceled += instance.OnRIghtMovement;
            @LeftPlayerEvent.started += instance.OnLeftPlayerEvent;
            @LeftPlayerEvent.performed += instance.OnLeftPlayerEvent;
            @LeftPlayerEvent.canceled += instance.OnLeftPlayerEvent;
            @RIghtPlayerEvent.started += instance.OnRIghtPlayerEvent;
            @RIghtPlayerEvent.performed += instance.OnRIghtPlayerEvent;
            @RIghtPlayerEvent.canceled += instance.OnRIghtPlayerEvent;
        }

        private void UnregisterCallbacks(IPlayerInputsActions instance)
        {
            @LeftMovement.started -= instance.OnLeftMovement;
            @LeftMovement.performed -= instance.OnLeftMovement;
            @LeftMovement.canceled -= instance.OnLeftMovement;
            @RIghtMovement.started -= instance.OnRIghtMovement;
            @RIghtMovement.performed -= instance.OnRIghtMovement;
            @RIghtMovement.canceled -= instance.OnRIghtMovement;
            @LeftPlayerEvent.started -= instance.OnLeftPlayerEvent;
            @LeftPlayerEvent.performed -= instance.OnLeftPlayerEvent;
            @LeftPlayerEvent.canceled -= instance.OnLeftPlayerEvent;
            @RIghtPlayerEvent.started -= instance.OnRIghtPlayerEvent;
            @RIghtPlayerEvent.performed -= instance.OnRIghtPlayerEvent;
            @RIghtPlayerEvent.canceled -= instance.OnRIghtPlayerEvent;
        }

        public void RemoveCallbacks(IPlayerInputsActions instance)
        {
            if (m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerInputsActions @PlayerInputs => new PlayerInputsActions(this);
    public interface IPlayerInputsActions
    {
        void OnLeftMovement(InputAction.CallbackContext context);
        void OnRIghtMovement(InputAction.CallbackContext context);
        void OnLeftPlayerEvent(InputAction.CallbackContext context);
        void OnRIghtPlayerEvent(InputAction.CallbackContext context);
    }
}
